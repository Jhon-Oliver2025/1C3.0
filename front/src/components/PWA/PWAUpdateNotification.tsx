/**
 * Componente de notifica√ß√£o para atualiza√ß√µes do PWA
 */

import React, { useState, useEffect } from 'react';
import { usePWAContext } from './PWAProvider';
import styles from './PWAUpdateNotification.module.css';

interface PWAUpdateNotificationProps {
  autoShow?: boolean;
  position?: 'top' | 'bottom';
  className?: string;
}

/**
 * Notifica√ß√£o que aparece quando h√° uma atualiza√ß√£o dispon√≠vel
 */
const PWAUpdateNotification: React.FC<PWAUpdateNotificationProps> = ({
  autoShow = true,
  position = 'top',
  className = ''
}) => {
  const { isUpdateAvailable, updateApp } = usePWAContext();
  const [isVisible, setIsVisible] = useState(false);
  const [isUpdating, setIsUpdating] = useState(false);

  /**
   * Mostra a notifica√ß√£o quando h√° atualiza√ß√£o dispon√≠vel
   */
  useEffect(() => {
    if (isUpdateAvailable && autoShow) {
      setIsVisible(true);
    }
  }, [isUpdateAvailable, autoShow]);

  /**
   * Manipula o clique no bot√£o de atualiza√ß√£o
   */
  const handleUpdate = async () => {
    try {
      setIsUpdating(true);
      updateApp();
      // A p√°gina ser√° recarregada automaticamente
    } catch (error) {
      console.error('‚ùå Erro ao atualizar app:', error);
      setIsUpdating(false);
    }
  };

  /**
   * Fecha a notifica√ß√£o
   */
  const handleDismiss = () => {
    setIsVisible(false);
  };

  // N√£o mostrar se n√£o h√° atualiza√ß√£o ou n√£o est√° vis√≠vel
  if (!isUpdateAvailable || !isVisible) {
    return null;
  }

  const notificationClasses = [
    styles.updateNotification,
    styles[position],
    className,
    isUpdating ? styles.updating : ''
  ].filter(Boolean).join(' ');

  return (
    <div className={notificationClasses} role="alert" aria-live="polite">
      <div className={styles.content}>
        <div className={styles.icon}>
          {isUpdating ? '‚è≥' : 'üîÑ'}
        </div>
        
        <div className={styles.message}>
          <div className={styles.title}>
            {isUpdating ? 'Atualizando...' : 'Nova vers√£o dispon√≠vel!'}
          </div>
          <div className={styles.description}>
            {isUpdating 
              ? 'Aplicando atualiza√ß√£o, aguarde...' 
              : 'Clique em "Atualizar" para obter a vers√£o mais recente.'
            }
          </div>
        </div>
        
        <div className={styles.actions}>
          {!isUpdating && (
            <>
              <button
                className={styles.updateButton}
                onClick={handleUpdate}
                disabled={isUpdating}
                aria-label="Atualizar aplicativo"
              >
                Atualizar
              </button>
              
              <button
                className={styles.dismissButton}
                onClick={handleDismiss}
                disabled={isUpdating}
                aria-label="Dispensar notifica√ß√£o"
              >
                ‚úï
              </button>
            </>
          )}
        </div>
      </div>
      
      {/* Barra de progresso durante atualiza√ß√£o */}
      {isUpdating && (
        <div className={styles.progressBar}>
          <div className={styles.progressFill}></div>
        </div>
      )}
    </div>
  );
};

export default PWAUpdateNotification;